@model List<Web.DBModel.ExplosiveType>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div class="main">
        <form id="form">
            <label for="explosiveTypes">Explosive Types</label>
            <input type="text" autocomplete="off" list="explosiveTypes" name="ExplosiveType" required />
            <datalist id="explosiveTypes">
                @{ foreach (var item in Model)
                    {
                        <option value="@item.Id" label="@item.Name"></option>
                    }
                }
            </datalist>
            <label for="wight">Weight</label>
            <input type="number" name="weight" id="weight" required />
            <label for="range">Range</label>
            <input type="number" name="range" id="range" required />
            <button type="submit">Submit</button>
        </form>
        <div>
            <table id="dataList">
                <thead>
                    <tr>
                        <th></th>
                        <th>Explosive Type</th>
                        <th>Weight</th>
                        <th>Range</th>
                        <th>TNT Weight for Pressure (kg)</th>
                        <th>Incident Pressure (kPa)</th>
                        <th>Reflected Pressure (kPa)</th>
                        <th>Time of Arrival (ms)</th>
                        <th>Shock Front Velocity (m/s)</th>
                        <th>TNT Weight for Impulse (kg)</th>
                        <th>Incident Impulse (kPa-ms)</th>
                        <th>Reflected Impulse (kPa-ms)</th>
                        <th>Positive Phase Duration (ms)</th>
                        <th>Created Date</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>

    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

@section Scripts {


    <script type="text/javascript">

        let dTable;
        const form = document.getElementById('form');
        const explosiveTypes = JSON.parse(JSON.stringify(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model))));

        const formEvent = () => {
            form.addEventListener('submit', (e) => {
                let url = `/Home/Calculate?`;
                e.preventDefault();
                var ipts = form.querySelectorAll('input');
                for (var ipt of ipts) {
                    url = `${url}${ipt.name}=${ipt.value}&`;
                }

                fetch(url)
                    .then((response) => {
                        return response.json();
                    })
                    .then((response) => {
                        const { error, errorMessage } = response;
                        if (error === false) {
                            form.reset()
                            dTable.ajax.reload();
                        } else {
                            alert(`There was happened an error while request processing
                                                            ${errorMessage}`);
                        }
                    });
            });
        };

        const tableEvent = () => {
            dTable = $('#dataList').DataTable(
                {
                    processing: true,
                    serverSide: true,
                    "searching": false,
                    ajax: {
                        type: "POST",
                        url: '/Home/GetData',
                    },
                    "columns": [
                        {
                            "searchable": false,
                            "orderable": false,
                            "data": "id"
                        },
                        { "data": "explosiveType", "searchable": false, "orderable": false },
                        { "data": "weight", "searchable": false, "orderable": false },
                        { "data": "range", "searchable": false, "orderable": false },
                        { "data": "tntWeightForPressure", "searchable": false, "orderable": false },
                        { "data": "incidentPressure", "searchable": false, "orderable": false },
                        { "data": "reflectedPressure", "searchable": false, "orderable": false },
                        { "data": "timeOfArrival", "searchable": false, "orderable": false },
                        { "data": "shockFrontVelocity", "searchable": false, "orderable": false },
                        { "data": "tntWeightForImpulse", "searchable": false, "orderable": false },
                        { "data": "incidentImpulse", "searchable": false, "orderable": false },
                        { "data": "reflectedImpulse", "searchable": false, "orderable": false },
                        { "data": "positivePhaseDuration", "searchable": false, "orderable": false },
                        {
                            "data": "createdDate",
                            "searchable": false,
                            "orderable": false,
                            "render": function (data, type, row) {
                                return new Date(data).toLocaleString();
                            },
                        },
                    ]

                });

            dTable.on('order.dt search.dt', function () {
                dTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

        };


        document.addEventListener("DOMContentLoaded", function (event) {

            formEvent();

            tableEvent();

        }, false);


    </script>
}
